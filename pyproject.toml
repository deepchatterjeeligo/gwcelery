[tool.poetry]
name = "gwcelery"
version = "0.9.0"
description = "Hipster pipeline for annotating LIGO events"
authors = ["Leo Singer <leo.singer@ligo.org>"]
license = "GPL-2.0+"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)",
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Topic :: Internet",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Topic :: Scientific/Engineering :: Physics"
]
homepage = "https://git.ligo.org/emfollow/gwcelery"
repository = "https://git.ligo.org/emfollow/gwcelery"
include = ['CHANGES.rst', 'CONTRIBUTING.rst']

[tool.poetry.dependencies]
python = "^3.7"
astropy = "*"
bilby-pipe = "*"
celery = {version = "^4.3.0", extras = ["redis"]}
kombu = "<=4.5.0"  # FIXME: https://github.com/celery/celery/issues/5261
comet = "*"
corner = "*"
dnspython = "*"  # silence "DNS: dnspython not found. Can not use SRV lookup." warning from SleekXMPP
flask = "*"
flask-caching = "*"
flower = "*"
gwdatafind = "*"
gwpy = "<=0.15.0"
healpy = "*"
imapclient = "*"
jinja2 = "*"
lalsuite = "==6.62.1.dev20191205"
ligo-followup-advocate = ">=1.1.3"
ligo-gracedb = ">=2.3.0"
ligo-raven = ">=1.17"
ligo-segments = "^1.2"
"ligo.skymap" = ">=0.1.13"
lscsoft-glue = "*"
lxml = "*"
numpy = "*"
p_astro = "==0.8.1"
pygcn = ">=0.1.19"
pytest = ">=3.0"
python-ligo-lw = "*"
safe-netrc = "*"
scipy = "<=1.2.2"
sentry-sdk = {version = "*", extras = ["flask"]}
service-identity = "*"  # We don't actually use this package, but it silences some annoying warnings from twistd.
sleek-lvalert = ">=0.0.4"
tornado = "<6"  # Tornado 6.0.0 breaks Flower because it removed tornado.web.asynchronous
voeventlib = ">=1.2"
werkzeug = ">=0.15.0"  # for werkzeug.middleware.proxy_fix.ProxyFix

[tool.poetry.dev-dependencies]
pytest-flask = "*"
pytest-socket = "*"
sphinx = ">=1.8.0b1"

[tool.poetry.scripts]
gwcelery = "gwcelery:app.start"
gwcelery-condor-submit-helper = "gwcelery.tools.condor_submit_helper:main"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
